target: all
metrics_generator_enabled: true
search_enabled: true

server:
  http_listen_port: 3200
  grpc_listen_port: 9095
query_frontend:
  search:
    query_backend_after: 0 # setting these both to 0 will force all range searches to hit the backend
    query_ingesters_until: 0
    max_duration: 0

distributor:
  receivers:
    jaeger:
      protocols:
        thrift_http:
        grpc:
        thrift_binary:
        thrift_compact:
    zipkin:
    otlp:
      protocols:
        http:
        grpc:
    opencensus:
  log_received_spans:
    enabled: true

ingester:
  lifecycler:
    address: 127.0.0.1
    ring:
      kvstore:
        store: inmemory
      replication_factor: 1
    final_sleep: 0s
  trace_idle_period: 1s
  max_block_bytes: 1
  max_block_duration: 2s
  complete_block_timeout: 1s
  flush_check_period: 1s

metrics_generator:
  registry:
    external_labels:
      source: tempo
      cluster: home-assistant
  storage:
    path: /data/tempo/generator/wal
    remote_write:
      - url: "${PROMETHEUS_URL}"
        send_exemplars: true

storage:
  trace:
    backend: local                     # backend configuration to use
    block:
      bloom_filter_false_positive: .05 # bloom filter false positive rate.  lower values create larger filters but fewer false positives
      index_downsample_bytes: 1000     # number of bytes per index record
      encoding: zstd                   # block encoding/compression.  options: none, gzip, lz4-64k, lz4-256k, lz4-1M, lz4, snappy, zstd, s2
      version: vParquet
    wal:
      path: /data/tempo/wal             # where to store the the wal locally
      encoding: snappy                 # wal encoding/compression.  options: none, gzip, lz4-64k, lz4-256k, lz4-1M, lz4, snappy, zstd, s2
    local:
      path: /data/tempo/blocks
    pool:
      max_workers: 100                 # worker pool determines the number of parallel requests to the object store backend
      queue_depth: 10000

overrides:
  max_search_bytes_per_trace: 50_000
  metrics_generator_processors: [service-graphs, span-metrics]
